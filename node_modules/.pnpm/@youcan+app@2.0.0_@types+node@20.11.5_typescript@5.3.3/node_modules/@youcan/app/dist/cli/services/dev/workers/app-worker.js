import { Worker, Color, Filesystem, Path } from '@youcan/cli-kit';
import { APP_CONFIG_FILENAME } from '../../../../constants.js';

class AppWorker extends Worker.Abstract {
    command;
    app;
    logger;
    constructor(command, app) {
        super();
        this.command = command;
        this.app = app;
        this.logger = new Worker.Logger('stdout', 'app', Color.cyan);
    }
    async boot() {
    }
    async run() {
        await this.command.output.wait(500);
        this.logger.write('watching for config updates...');
        const watcher = Filesystem.watch(Path.resolve(this.app.root, APP_CONFIG_FILENAME), {
            persistent: true,
            ignoreInitial: true,
            awaitWriteFinish: {
                stabilityThreshold: 50,
            },
        });
        watcher.once('change', async () => {
            await watcher.close();
            this.command.controller.abort();
            this.logger.write('config update detected, reloading workers...');
            this.command.config.runCommand(this.command.id, this.command.argv);
        });
    }
}

export { AppWorker as default };
