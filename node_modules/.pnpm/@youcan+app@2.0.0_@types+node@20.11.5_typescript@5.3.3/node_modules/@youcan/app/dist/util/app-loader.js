import { Path, Filesystem } from '@youcan/cli-kit';
import { APP_CONFIG_FILENAME, DEFAULT_EXTENSIONS_DIR, EXTENSION_CONFIG_FILENAME, DEFAULT_WEBS_DIR, WEB_CONFIG_FILENAME } from '../constants.js';

async function load() {
    const path = Path.resolve(Path.cwd(), APP_CONFIG_FILENAME);
    if (!await Filesystem.exists(path)) {
        throw new Error(`app config not found at ${path}`);
    }
    const config = await Filesystem.readJsonFile(path);
    const app = {
        config,
        webs: [],
        extensions: [],
        root: Path.cwd(),
    };
    app.extensions = await loadExtensions(app);
    app.webs = await loadWebs(app);
    return app;
}
async function loadExtensions(app) {
    const pattern = Path.join(app.root, `${DEFAULT_EXTENSIONS_DIR}/*`, EXTENSION_CONFIG_FILENAME);
    const paths = await Filesystem.glob(pattern);
    const promises = paths.map(async (p) => {
        return {
            root: Path.dirname(p),
            config: await Filesystem.readJsonFile(p),
        };
    });
    return await Promise.all(promises);
}
async function loadWebs(app) {
    const pattern = Path.join(app.root, DEFAULT_WEBS_DIR, WEB_CONFIG_FILENAME);
    const paths = await Filesystem.glob(pattern);
    const promises = paths.map(async (p) => ({
        root: Path.dirname(p),
        config: await Filesystem.readJsonFile(p),
    }));
    return await Promise.all(promises);
}

export { load };
