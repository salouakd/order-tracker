"use strict";Object.defineProperty(exports, "__esModule", {value: true});// src/starter-kit.ts
var _core = require('@tiptap/core');
var _extensionblockquote = require('@tiptap/extension-blockquote');
var _extensionbold = require('@tiptap/extension-bold');
var _extensionbulletlist = require('@tiptap/extension-bullet-list');
var _extensioncode = require('@tiptap/extension-code');
var _extensioncodeblock = require('@tiptap/extension-code-block');
var _extensiondocument = require('@tiptap/extension-document');
var _extensiondropcursor = require('@tiptap/extension-dropcursor');
var _extensiongapcursor = require('@tiptap/extension-gapcursor');
var _extensionhardbreak = require('@tiptap/extension-hard-break');
var _extensionheading = require('@tiptap/extension-heading');
var _extensionhistory = require('@tiptap/extension-history');
var _extensionhorizontalrule = require('@tiptap/extension-horizontal-rule');
var _extensionitalic = require('@tiptap/extension-italic');
var _extensionlistitem = require('@tiptap/extension-list-item');
var _extensionorderedlist = require('@tiptap/extension-ordered-list');
var _extensionparagraph = require('@tiptap/extension-paragraph');
var _extensionstrike = require('@tiptap/extension-strike');
var _extensiontext = require('@tiptap/extension-text');
var StarterKit = _core.Extension.create({
  name: "starterKit",
  addExtensions() {
    var _a, _b, _c, _d, _e, _f, _g, _h, _i, _j, _k, _l, _m, _n, _o, _p, _q, _r;
    const extensions = [];
    if (this.options.blockquote !== false) {
      extensions.push(_extensionblockquote.Blockquote.configure((_a = this.options) == null ? void 0 : _a.blockquote));
    }
    if (this.options.bold !== false) {
      extensions.push(_extensionbold.Bold.configure((_b = this.options) == null ? void 0 : _b.bold));
    }
    if (this.options.bulletList !== false) {
      extensions.push(_extensionbulletlist.BulletList.configure((_c = this.options) == null ? void 0 : _c.bulletList));
    }
    if (this.options.code !== false) {
      extensions.push(_extensioncode.Code.configure((_d = this.options) == null ? void 0 : _d.code));
    }
    if (this.options.codeBlock !== false) {
      extensions.push(_extensioncodeblock.CodeBlock.configure((_e = this.options) == null ? void 0 : _e.codeBlock));
    }
    if (this.options.document !== false) {
      extensions.push(_extensiondocument.Document.configure((_f = this.options) == null ? void 0 : _f.document));
    }
    if (this.options.dropcursor !== false) {
      extensions.push(_extensiondropcursor.Dropcursor.configure((_g = this.options) == null ? void 0 : _g.dropcursor));
    }
    if (this.options.gapcursor !== false) {
      extensions.push(_extensiongapcursor.Gapcursor.configure((_h = this.options) == null ? void 0 : _h.gapcursor));
    }
    if (this.options.hardBreak !== false) {
      extensions.push(_extensionhardbreak.HardBreak.configure((_i = this.options) == null ? void 0 : _i.hardBreak));
    }
    if (this.options.heading !== false) {
      extensions.push(_extensionheading.Heading.configure((_j = this.options) == null ? void 0 : _j.heading));
    }
    if (this.options.history !== false) {
      extensions.push(_extensionhistory.History.configure((_k = this.options) == null ? void 0 : _k.history));
    }
    if (this.options.horizontalRule !== false) {
      extensions.push(_extensionhorizontalrule.HorizontalRule.configure((_l = this.options) == null ? void 0 : _l.horizontalRule));
    }
    if (this.options.italic !== false) {
      extensions.push(_extensionitalic.Italic.configure((_m = this.options) == null ? void 0 : _m.italic));
    }
    if (this.options.listItem !== false) {
      extensions.push(_extensionlistitem.ListItem.configure((_n = this.options) == null ? void 0 : _n.listItem));
    }
    if (this.options.orderedList !== false) {
      extensions.push(_extensionorderedlist.OrderedList.configure((_o = this.options) == null ? void 0 : _o.orderedList));
    }
    if (this.options.paragraph !== false) {
      extensions.push(_extensionparagraph.Paragraph.configure((_p = this.options) == null ? void 0 : _p.paragraph));
    }
    if (this.options.strike !== false) {
      extensions.push(_extensionstrike.Strike.configure((_q = this.options) == null ? void 0 : _q.strike));
    }
    if (this.options.text !== false) {
      extensions.push(_extensiontext.Text.configure((_r = this.options) == null ? void 0 : _r.text));
    }
    return extensions;
  }
});

// src/index.ts
var src_default = StarterKit;



exports.StarterKit = StarterKit; exports.default = src_default;
