/// <reference types="node" />
import { Writable } from 'stream';
import type { Color } from '..';
export interface Interface {
    run(): Promise<void>;
    boot(): Promise<void>;
}
export declare class Logger extends Writable {
    private channel;
    private type;
    private color;
    constructor(channel: 'stdout' | 'stderr', type: string, color: Color.Color);
    write(chunk: unknown): boolean;
    private pad;
}
export declare abstract class Abstract implements Interface {
    abstract boot(): Promise<void>;
    abstract run(): Promise<void>;
}
