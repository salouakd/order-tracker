import kleur from 'kleur';

class Loader {
    message;
    timer;
    constructor(message) {
        this.message = message;
        this.message = message;
        this.timer = null;
    }
    start() {
        process.stdout.write('\x1B[?25l');
        const frames = ['⠋', '⠙', '⠹', '⠸', '⠼', '⠴', '⠦', '⠧', '⠇', '⠏'];
        let i = 0;
        this.timer = setInterval(() => {
            process.stdout.write(`\r${frames[i = ++i % frames.length]} ${this.message}`);
        }, 100);
        return this;
    }
    flush() {
        if (this.timer) {
            clearInterval(this.timer);
            this.timer = null;
        }
    }
    stop() {
        this.flush();
        process.stdout.write('\r');
        process.stdout.write(kleur.green(`✔ ${this.message}\n`));
        return this;
    }
    error(message = null) {
        this.flush();
        process.stdout.write('\r');
        process.stdout.write(kleur.red(`✖ ${message ?? this.message}\n`));
        return this;
    }
    static async exec(message, closure) {
        const loader = new Loader(message).start();
        await closure(loader);
        loader.timer && loader.stop();
    }
}

export { Loader };
