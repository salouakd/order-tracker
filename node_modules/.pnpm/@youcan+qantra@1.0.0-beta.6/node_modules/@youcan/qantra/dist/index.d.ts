declare type AlertType = 'warning' | 'success' | 'info' | 'error';

declare interface BaseResource {
    id?: number | string;
    price?: string;
    stock?: number;
    name?: string;
    thumbnailUrl?: string;
}

export declare function bounce(url: string): void;

export declare function redirect(url: string): void;

declare interface Resource extends BaseResource {
    variants?: Variant[];
}

export declare function resourcePicker({ type, }: ResourcePickerOptions): Promise<Resource[]>;

declare interface ResourcePickerOptions {
    type: ResourcePickerType;
}

declare type ResourcePickerType = 'product' | 'collection';

export declare function sessionToken(): Promise<string>;

export declare const toast: {
    show: (options: ToastOptions) => void;
};

declare interface ToastOptions {
    title: string;
    description: string;
    position?: ToastPosition;
    type?: AlertType;
    closeAfterDuration?: number;
    canClose?: boolean;
}

declare type ToastPosition = 'top-right' | 'top-left' | 'bottom-right' | 'bottom-left';

declare interface Variant extends BaseResource {
}

export { }
