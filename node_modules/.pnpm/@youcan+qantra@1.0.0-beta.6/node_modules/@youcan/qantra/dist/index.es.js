function i(n, t) {
  return !(typeof n.data != "object" || Array.isArray(n.data) || n.data === null || !("type" in n.data) || n.data.type !== t || !("payload" in n.data));
}
function e(n, t, r = { once: !0 }) {
  window.addEventListener(
    "message",
    (a) => {
      if (i(a, n))
        return t(...a.data.payload);
    },
    r
  );
}
function o(n, ...t) {
  if (!window.top || !("postMessage" in window.top))
    throw new Error("could not find parent window, aborting...");
  window.top.postMessage({ type: n, payload: t }, "*");
}
function s() {
  return new Promise((n) => {
    e("QANTRA::SESSION_TOKEN.RES", (t) => n(t)), o("QANTRA::SESSION_TOKEN.REQ");
  });
}
function u(n) {
  o("QANTRA::NAV.REDIRECT.REMOTE", n);
}
function E(n) {
  o("QANTRA::NAV.BOUNCE", n);
}
function d({
  type: n
}) {
  return new Promise((t) => {
    e("QANTRA::RESOURCE_PICKER.RES", (r) => t(r)), o("QANTRA::RESOURCE_PICKER.REQ", n);
  });
}
const R = {
  show: (n) => {
    o("QANTRA::TOAST.REQ", n);
  }
};
export {
  E as bounce,
  u as redirect,
  d as resourcePicker,
  s as sessionToken,
  R as toast
};
